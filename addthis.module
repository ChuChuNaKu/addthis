<?php

/**
 * Implements hook_theme().
 */
function addthis_theme($existing, $type, $theme, $path) {
  return array(
    'addthis_wrapper' => array(
      'render element' => 'element',
    ),
    'addthis_element' => array(
      'render element' => 'element',
    ),
//    'addthis' => array(
//      'render element' => 'element',
//    ),
  );
}


function addthis_page_attachments(array &$page){
  $page['#attached']['library'][] = 'addthis/addthis.global';


// Include the widget js when we include on all but admin pages.
  //if (!path_is_admin(current_path()) && AddThis::getInstance()->getWidgetJsInclude() == AddThis::WIDGET_JS_INCLUDE_PAGE) {
  $manager = \Drupal\addthis\Services\AddThisScriptManager::getInstance();
  $manager->attachJsToElement($page);
  //}

}


function addthis_library_info_alter(){

}


/**
 * Implementation to retrieve formatters for a given type of field.
 */
function _addthis_field_info_formatter_field_type($field_type = NULL) {
  $formatters = \Drupal::Service('plugin.manager.field.formatter')->getDefinitions();
  foreach ($formatters as $key => $formatter) {
    if (!in_array((!isset($field_type) ? 'addthis' : $field_type), $formatter['field types'])) {
      unset($formatters[$key]);
    }
  }
  return $formatters;
}



function theme_addthis_wrapper($variables) {
  $element = $variables['addthis_wrapper'];
  $output = '<' . $element['#tag'] . drupal_attributes($element['#attributes']) . '>';
  $children = element_children($element);

  if (count($children) > 0) {
    foreach ($children as $child) {
      $output .= render($element[$child]);
    }
  }

  $output .= '</' . $element['#tag'] . ">\n";
  return $output;
}

/**
 * Theme the elements that are created in the AddThis module.
 *
 * This is created with hook_addthis_element.
 */
function theme_addthis_element($variables) {
  $element = $variables['addthis_element'];

  if (!isset($element['#value'])) {
    return '<' . $element['#tag'] . drupal_attributes($element['#attributes']) . " />\n";
  }

  $output = '<' . $element['#tag'] . drupal_attributes($element['#attributes']) . '>';
  if (isset($element['#value_prefix'])) {
    $output .= $element['#value_prefix'];
  }
  $output .= $element['#value'];
  if (isset($element['#value_suffix'])) {
    $output .= $element['#value_suffix'];
  }
  $output .= '</' . $element['#tag'] . ">\n";
  return $output;
}